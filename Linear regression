
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Load dataset (adjust path or name if needed)
url = 'https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv'
df = pd.read_csv(url)

# Display first few rows
print("First 5 rows of the dataset:")
print(df.head())

# Rename target column if necessary
# df.rename(columns={'MEDV': 'SalePrice'}, inplace=True)

# Select features and target
X = df[['rm']]  # e.g., average number of rooms per dwelling
y = df['medv']  # e.g., median value of owner-occupied homes in $1000s


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Fit Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the Model
y_pred = model.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nModel Evaluation:")
print(f"MAE: {mae:.2f}")
print(f"MSE: {mse:.2f}")
print(f"RÂ² Score: {r2:.2f}")

# Plot Regression Line
plt.figure(figsize=(8,6))
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Predicted')
plt.title('Linear Regression Line')
plt.xlabel('Average Rooms (RM)')
plt.ylabel('Median House Value')
plt.legend()
plt.grid(True)
plt.show()

# Interpret Coefficients
print("\nModel Coefficients:")
print(f"Intercept: {model.intercept_:.2f}")
print(f"Coefficient for 'rm': {model.coef_[0]:.2f}")
